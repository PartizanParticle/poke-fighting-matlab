micromon[][] microArray;
float[] attack;
float[] defense;
ArrayList<micromon> microList = new ArrayList<micromon>();
int currMicro = 0;

void setup(){
  size(600,600);
  int tw =3;
  microArray = new micromon[width/tw][height/tw];
  attack = new float[microArray.length*(height/tw)];
  defense = new float[microArray.length*(height/tw)];
  for (int i=0; i<microArray.length; i++){
    for (int j=0; j<microArray[i].length; j++){
      int t2 = -1;
      if (floor(random(4))==0){t2 = floor(random(18));}
      microArray[i][j] = new micromon(i, j, floor(random(18)), t2);
    }
  }
   
  for (int i=0; i<microArray.length; i++){
    for (int j=0; j<microArray[i].length; j++){
      micromon mm = microArray[i][j];
      microList.add(mm);
      int k=microList.size()-1;
      for (int o = k+1; o>0; o--){
        if (mm.speed<microList.get(o-1).speed){
          micromon tmp = microList.get(o-1);
          microList.set(o-1,mm);
          microList.set(o,tmp);
          mm = microList.get(o-1);
        }else{
          o = 0;
        }
      }
    }
  }
}

void draw(){
  noStroke();
  int w = width/microArray.length, h = height/microArray[0].length;
 
  for (int i=0; i<microList.size(); i++){
    micromon m = microList.get(i);
    micromon e = getWeakest(m);
    if (e!=null){
      e.health -= testdamage(m,e);
      if (e.health<=0){
        microList.remove(e);
        m.health += 100;
        e.health = m.health;
        attack[m.id]++;
        attack[e.id]--;
        e.speed = m.speed;
        e.type1 = m.type1;
        e.type2 = m.type2;
        e.id = m.id;
        microList.add(i,e);
        i++;
      }
    }
    fill(getMicromonColor(m));
    rect(m.i*w,m.j*h,w,h);
  }
  saveFrame();
}

micromon getWeakest(micromon m){
  float damage = -100000, d;
  micromon highest = null;
  for (int i=-1; i<=2; i+=2){
      int tI = m.i+i;
      if (tI<0){tI = microArray.length+i;}
      if (tI==microArray.length){tI = 0;}
      if (microArray[tI][m.j].type1==m.type1 && microArray[tI][m.j].type2==m.type2) {}else{
        d = testdamage(m,microArray[tI][m.j]);
        if (d>damage){
          highest = microArray[tI][m.j];
          damage = d;
        }
      }
  }
  for (int j=-1; j<=2; j+=2){
      int tJ = m.j+j;
      if (tJ<0){tJ = microArray.length+j;}
      if (tJ==microArray[0].length){tJ = 0;}
      if (microArray[m.i][tJ].type1==m.type1 && microArray[m.i][tJ].type2==m.type2) {}else{
        d = testdamage(m,microArray[m.i][tJ]);
        if (d>damage){
          highest = microArray[m.i][tJ];
          damage = d;
        }
      }
  }
  return highest;
}

float testdamage(micromon m, micromon e){
  float d = attack[m.id]-defense[e.id]/2;
  if (d<=0){return 1;}
  d=d*max(getEffect(m.type1,e),getEffect(m.type2,e));
  return d;
}

color getMicromonColor(micromon m){
  if (m.type2==-1){return getTypeColor(m.type1);}
  return color(
    (2*red(getTypeColor(m.type1))/3)+(red(getTypeColor(m.type2))/3),
      (2*green(getTypeColor(m.type1))/3)+(green(getTypeColor(m.type2))/3),
        (2*blue(getTypeColor(m.type1))/3)+(blue(getTypeColor(m.type2))/3));
}

float getEffect(int m, micromon e){
  return getEff(m,e.type1);
}

float getEff(int m, int eM){
  if (m == 0){ //normal
    if (eM == 13){return 0;}
  }
  if (m == 1){ // fire
    if (eM == 4 || eM == 5 || eM == 11 || eM == 16){return 2;}
    if (eM == 1 || eM == 2 || eM == 12 || eM == 14){return 1/2;}
  }
    if (m == 2){ //water
    if (eM == 1 || eM == 8 || eM == 12){return 2;}
    if (eM == 2 || eM == 4 || eM == 14){return 1/2;}
  }
    if (m == 3){ //electric
    if (eM == 2 || eM == 9){return 2;}
    if (eM == 8){return 0;}
  }
    if (m == 4){ //grass
    if (eM == 2 || eM == 8 || eM == 12){return 2;}
    if (eM == 1 || eM == 4 || eM == 7 || eM == 9 || eM == 11 || eM == 14 || eM == 16){return 1/2;}
  }
    if (m == 5){ //ice
    if (eM == 4 || eM == 8 || eM == 9 || eM == 14){return 2;}
    if (eM == 1 || eM == 2 || eM == 5 || eM == 16){return 1/2;}
  }
    if (m == 6){ //fighting
    if (eM == 0 || eM == 5 || eM == 12 || eM == 15 || eM == 16){return 2;}
    if (eM == 7 || eM == 9 || eM == 10 || eM == 11 || eM == 17){return 1/2;}
  }
    if (m == 7){ //poison
    if (eM == 4 || eM == 17){return 2;}
    if (eM == 7 || eM == 8 || eM == 12 || eM == 13){return 1/2;}
    if (eM == 16){return 0;}
  }
    if (m == 8){ //ground
    if (eM == 1 || eM == 3 || eM == 7 || eM == 12 || eM == 16){return 2;}
    if (eM == 4 || eM == 11){return 1/2;}
    if (eM == 9){return 0;}
  }
    if (m == 9){ //flying
    if (eM == 4 || eM == 6 || eM == 11){return 2;}
    if (eM == 3 || eM == 12 || eM == 16){return 1/2;}
  }
    if (m == 10){ //psychic
    if (eM == 6 || eM == 7){return 2;}
    if (eM == 10 || eM == 16){return 1/2;}
    if (eM == 15){return 0;}
  }
    if (m == 11){ //bug
    if (eM == 4 || eM == 10 || eM == 15){return 2;}
    if (eM == 1 || eM == 6 || eM == 7 || eM == 9 || eM == 13 || eM == 16 || eM == 17){return 1/2;}
  }
    if (m == 12){ //rock
    if (eM == 1 || eM == 5 || eM == 9 || eM == 11){return 2;}
    if (eM == 6 || eM == 8 || eM == 16){return 1/2;}
  }
    if (m == 13){ //ghost
    if (eM == 10 || eM == 13){return 2;}
    if (eM == 15){return 1/2;}
    if (eM == 0){return 0;}
  }
    if (m == 14){ //dragon
    if (eM == 14){return 2;}
    if (eM == 16){return 1/2;}
    if (eM == 17){return 0;}
  }
    if (m == 15){ //dark
    if (eM == 10 || eM == 13){return 2;}
    if (eM == 6 || eM == 15 || eM == 17){return 1/2;}
  }
  if (m == 16){ //steel
    if (eM == 5 || eM == 12 || eM == 17){return 2;}
    if (eM == 1 || eM == 2 || eM == 3 || eM == 16){return 1/2;}
  }
  if (m == 17){ //fairy
    if (eM == 6 || eM == 14 || eM == 15){return 2;}
    if (eM == 1 || eM == 7 || eM == 16){return 1/2;}
  }
  return 1;
} 

color getTypeColor(int type){
  if (type == 0){return color(200);}    //normal
  if (type == 1){return color(255,0,0);}//fire
  if (type == 2){return color(0,0,255);}//water
  if (type == 3){return color(255,255,0);}//electrix
  if (type == 4){return color(0,255,0);}//grass
  if (type == 5){return color(100,100,255);}//ice
  if (type == 6){return color(153,37,33);}//fighting
  if (type == 7){return color(100,0,200);}//poison
  if (type == 8){return color(216,170,91);}//ground
  if (type == 9){return color(154,212,237);}//flying
  if (type == 10){return color(255,0,255);}//psychic
  if (type == 11){return color(100,255,0);}//bug
  if (type == 12){return color(142,110,145);}//rock
  if (type == 13){return color(41,26,79);} //ghost
  if (type == 14){return color(98,157,209);} //dragon
  if (type == 15){return color(20);} //dark
  if (type == 16){return color(100);} //steel
  return color(255,0,100); //fairy
}

class micromon{
  int id, i, j, type1, type2;
  float health, speed;
  micromon grandfather = null;
  
  micromon(int ii, int jj, int T1, int T2){
    i = ii;
    j = jj;
    id = i+j*microArray.length;
    type1 = T1;
    type2 = T2;
    int tot = 255;
    health = 100+random(tot);
    tot -= (health-100);
    attack[id] = random(tot);
    tot-=attack[id]; 
    defense[id] = random(tot);
    tot-=defense[id];
    speed = tot;
  }
}
